import json
import time
from pathlib import Path

import requests
import telebot
import datetime
import re
from telebot import types # –∏–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
import pytube
from pytube import YouTube



bot = telebot.TeleBot('')
# —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –µ–≥–æ





@bot.message_handler(commands = ['start'])
def start(message):
    message = bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ",)
    bot.register_next_step_handler(message, vid)

def vid(message):
    youtube_video_url = message.text

    yt_obj = YouTube(youtube_video_url)
    filters =yt_obj.streams.filter(progressive=True, file_extension='mp4')
    filters.get_highest_resolution().download(filename=f'{yt_obj.title}.mp4')
    bot.send_message(message.chat.id, "–í–∏–¥–µ–æ —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è")
    video = open(f'{yt_obj.title}.mp4', 'rb')
    bot.send_video(message.chat.id, video)
    time.sleep(200)
    video.close()
    vid_fail = Path(f'{yt_obj.title}.mp4')
    vid_fail.unlink()







@bot.message_handler(commands=['ch'])
def handle_message(message):
    bot.send_message("@chenel_raw", "—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞", time.sleep(10))

#—Ä–∞—Å—Å—ã–ª–∫–∞
@bot.message_handler(commands=['start'])
def start(message):
    with open('pers_id.txt', 'a+') as pers_id:
        print(message.chat.id, file=pers_id)

@bot.message_handler(commands=['rassilka'])
def rassylka(message):
    if message.chat.id == 308414940:
        for i in open('pers_id.txt', 'r').readlines():
            bot.send_message(i, '–º–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞')

# @bot.message_handler(regexp='[0-9]+')
# def start(message):
#     answer = requests.get(f'http://numbersapi.com/{message.text}?json')
#     bot.send_message(message.chat.id, json.loads(answer.text)['text'])

@bot.message_handler(commands = ['getpost'])
def start(message):
    message = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–π –ø–æ–∏—Å–∫–æ–≤–æ–π –∑–∞–ø—Ä–æ—Å!üîé",)
    bot.register_next_step_handler(message, reply)

def reply(message):
    saved_message = message.text
    first, second = '+'.join(message.text.split()), '%20'.join(message.text.split())
    bot.send_message(message.chat.id, f'<a href="https://www.google.com/search?q={first}"> Google</a>\n'
                                      f'<a href="https://yandex.ru/search/?lr=16&text={first}">Yandex</a>\n'
                                      f'<a href="https://www.youtube.com/results?search_query={first}">Yotube</a>\n'
                                      f'<a href="https://stepik.org/catalog/search?q={second}">Stepa</a>', parse_mode='HTML')

# @bot.message_handler(commands=['start', 'end'])
# def start(message): # message-–æ–±—ä–µ–∫—Ç
#     bot.send_message(message.chat.id, message.from_user.first_name) # message.chat.id==message.from_user.id
#     bot.send_message(message.chat.id, message.from_user.username)
#     date = message.date + 10800  # –ü—Ä–∏–±–∞–≤–ª—è–µ–º 3 —á–∞—Å–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö) –∫ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ UTC –∏ –ø–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø–æ –ú–°–ö!
#     bot.send_message(message.chat.id, datetime.datetime.utcfromtimestamp(date))
#     bot.send_message(message.chat.id, message.chat.id)

@bot.message_handler(commands=['text'])
def handle_message(message):
    bot.send_message(message.chat.id, '<i>–ö–∞–∫–æ–π-—Ç–æ</i> —Ç–µ–∫—Å—Ç', parse_mode='HTML')
    bot.send_message(message.chat.id, '<tg-spoiler> —Ç–µ–∫—Å—Ç </tg-spoiler>', parse_mode='HTML')

BUY = '–ö—É–ø–∏—Ç—å \U0001F381'
STONE = '–ö–∞–º–µ–Ω—å —Å –≥–ª–∞–∑–∞–º–∏'
BACK = '–ù–∞–∑–∞–¥'
@bot.message_handler(commands=['–º–∞–≥–∞–∑–∏–Ω'])
@bot.message_handler(func=lambda message: message.text == BACK)
def start(message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(text=BUY)
    kb.add(btn1)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω"–ü–æ–ª–µ–∑–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã"', reply_markup=kb)
@bot.message_handler(func=lambda message: message.text==BUY )
def start(message):
    kb2 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn2 = types.KeyboardButton(text=STONE)
    btn3 = types.KeyboardButton(text=BACK)
    kb2.add(btn2, btn3)
    bot.send_message(message.chat.id, '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å', reply_markup=kb2)
@bot.message_handler(func=lambda message: message.text==STONE )
def start(message):
    file = open('stoun.jpg', 'rb')
    bot.send_photo(message.chat.id, file, caption="""–¢–æ–≤–∞—Ä: –ö–∞–º–µ–Ω—å —Å –≥–ª–∞–∑–∞–º–∏
–¶–µ–Ω–∞: 1000$
–í –Ω–∞–ª–∏—á–∏–∏: 2""")

#—Ä–∞–∑–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
one = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤'
two = '–ö–∞—Ç–∞–ª–æ–≥ üéÅ'
three = '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§'
fo = 'FAQ'
five = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ üóø'
six = '–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É üì¢'

@bot.message_handler(commands=['–≤—Ö–æ–¥'])
def start(message):
    kb1 = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True) # one_time_keyboard=True —É–±—Ä–∞—Ç—å –∫–ª–∞–≤—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
    kb2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(text=two)
    btn2 = types.KeyboardButton(text=three)
    btn3 = types.KeyboardButton(text=fo)
    btn4 = types.KeyboardButton(text=five)
    btn5 = types.KeyboardButton(text=six)
    kb1.add(btn1, btn2, btn3, btn4, btn5)
    kb2.add(btn1, btn2, btn3)
    if message.chat.id == 308414940:
        bot.send_message(308414940, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω "–ü–æ–ª–µ–∑–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã"', reply_markup=kb1)
    else:
        bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω "–ü–æ–ª–µ–∑–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã"', reply_markup=kb2)
    time.sleep(5)
    #bot.send_message(message.chat.id, "–£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É", reply_markup=types.ReplyKeyboardRemove()) # —É–±—Ä–∞—Ç—å –∫–ª–∞–≤—É

#url-–∫–Ω–æ–ø–∫–∏
@bot.message_handler(commands=['—Å—Å—ã–ª–∫–∞'])
def start(message):
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton(text='—Å—Å—ã–ª–∫–∞1', url='https://www.youtube.com/c/selfedu_rus')
    btn2 = types.InlineKeyboardButton(text='—Å—Å—ã–ª–∫–∞2', url='https://www.youtube.com/c/DjangoSchool')
    kb.add(btn1, btn2)
    bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏ —Å—Å—ã–ª–∫—É', reply_markup=kb)

#calback –∫–Ω–æ–ø–∫–∏
@bot.message_handler(commands=['call'])
def start(message):
    kb = types.InlineKeyboardMarkup(row_width=2)
    btn = types.InlineKeyboardButton(text='–¥–∞', callback_data='btn1')
    btn1 = types.InlineKeyboardButton(text='–Ω–µ—Ç', callback_data='btn2')
    kb.add(btn, btn1)
    bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞', reply_markup=kb)
@bot.callback_query_handler(func=lambda callback: callback.data)
def check_calback(callback):
    if callback.data == 'btn1':
        bot.send_message(callback.message.chat.id, '–í—ã —Å–æ–≥–ª–∞—Å–Ω—ã –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö')
    elif callback.data == 'btn2':
        bot.send_message(callback.message.chat.id, '–í—ã –ù–ï —Å–æ–≥–ª–∞—Å–Ω—ã')

#–∫–Ω–æ–ø–∫–∏+
@bot.message_handler(commands=['–∫—Ä–µ—Å—Ç'])
def start(message):
    kb = types.InlineKeyboardMarkup()
    b = types.InlineKeyboardButton(text='‚ûïÔ∏è', callback_data='+')
    kb.row(b).row(*[b] * 3).row(b)
    bot.send_message(message.chat.id, '+Ô∏è', reply_markup=kb)




#—É–¥–∞–ª–µ–Ω–∏–µ
# @bot.message_handler(content_types=['text','audio','video','photo','voice','sticker'])
# def delete_user_message(message):
#     bot.delete_message(message.chat.id, message.id)
#–±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏ –ø–æ–ª—å–∑-–ª—è
# @bot.message_handler()
# def greating(message):
#     bot_message = bot.send_message(message.chat.id, "–ó–¥–µ—Å—å –Ω–µ—Ç —Å–≤–æ–±–æ–¥—ã —Å–ª–æ–≤–∞")
#     time.sleep(2)
#     bot.delete_message(message.chat.id, message.id)
#     bot.delete_message(message.chat.id, bot_message.id)


#–¥–æ–∫—É–º–µ–Ω—Ç
# @bot.message_handler(func=lambda message: True)
# def handle_message(message):
#     my_file = open("file.txt", "w+", encoding='utf-8')
#     my_file.write(message.text)
#     my_file.close()
#     my_file = open("file.txt", 'r', encoding='utf-8')
#     bot.send_document(message.chat.id, my_file)

#–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É —Ñ–æ—Ç–æ –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
# @bot.message_handler(content_types=['photo', 'video'])
# def handle_message(message):
#     if message.content_type == 'photo':
#         bot.send_photo(308414940, message.photo[0].file_id)
#     elif message.content_type == 'video':
#         bot.send_video(308414940, message.video.file_id)

# @bot.message_handler(content_types=['audio'])
# def handle_message(message):
#     bot.send_message(message.chat.id, f'–ò–º—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞: {message.audio.file_name}')

@bot.message_handler(content_types=['sticker'])
def handle_message(message):
    bot.send_message(message.chat.id, message.sticker.file_id)
    bot.send_sticker(message.chat.id, message.sticker.file_id)

@bot.message_handler(commands=['–±–æ–∫—Å', '–ø–µ—Ä—á–∞—Ç–∫–∏'])
@bot.message_handler(func=lambda message: message.text == '—Å—É–º–∫–∞')
def handle_message(message):
    file = open('bag.jpg', 'rb')
    bot.send_photo(message.chat.id, file, "—Ñ–æ—Ç–æ")

@bot.message_handler(func=lambda message: message.text == '–±–æ—Ç')
def handle_message(message):
    bot.send_photo(message.chat.id, r'https://ibb.co/G557cNb')

#-----------------------------------------------------------------------------------
# @bot.message_handler(regexp="^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$")
# def handle_message(message):
#     bot.send_message(message.chat.id, '–≠—Ç–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
#
# @bot.message_handler(func=lambda m: True)
# def findkeywords(message):
#     bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
#------------------------------------------------------------------------------------

def poli(message):
    message = message.text
    message = message.lower().replace(' ', '')
    return message == message[-1::-1]
    # message = message.text
    # message = re.sub(r'[—å—ä]', '', message)
    # message = message.lower().split()
    # for i in range(len(message)):
    #     return message[i] == message[i - 1][::-1]
@bot.message_handler(func=poli)
def start(message):
    bot.send_message(message.chat.id, '–ü–∞–ª–∏–Ω–¥—Ä–æ–º')




#---------------------------
# ct = {'text': '–≠—Ç–æ —Ç–µ–∫—Å—Ç',
#     'audio': '–≠—Ç–æ –∞—É–¥–∏–æ',
#     'document': '–≠—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç',
#     'photo': '–≠—Ç–æ —Ñ–æ—Ç–æ',
#     'sticker': '–≠—Ç–æ —Å—Ç–∏–∫–µ—Ä',
#     'video': '–≠—Ç–æ –≤–∏–¥–µ–æ',
#     'voice': '–≠—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
#     'location': '–≠—Ç–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
#     'contact': '–≠—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç',
#     'new_chat_members': '–≠—Ç–æ –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ —á–∞—Ç–∞',
#     'left_chat_member': '–≠—Ç–æ —É—á–∞—Å—Ç–Ω–∏–∫ –≤—ã—à–µ–ª –∏–∑ —á–∞—Ç–∞',
#     'new_chat_title': '–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–æ',
#     'new_chat_photo': '–ö–∞—Ä—Ç–∏–Ω–∫–∞ —á–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞',
#     'delete_chat_photo': '–ö–∞—Ä—Ç–∏–Ω–∫–∞ —á–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∞',
#     'pinned_message': '–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ'
#   }
# @bot.message_handler(content_types=ct.keys())
# def echo_all(message):
#     bot.send_message(message.chat.id, ct[message.content_type])
# ------------------------------------------------------------------

# def f(message):
#     return message.text == '1'
#
# @bot.message_handler(func=f)
# def start(message):
#     bot.reply_to(message, 'Hi')


def findkeyword(message):
    keywords = ['–∫–∞—Ä—Ç', 'card', 'cvv', '–∫–æ–¥', 'code', 'bank']
    return any(word in message.text.lower() for word in keywords)
    # message = message.text
    # message = message.lower()
    # message = re.sub(r'[^\w\s]', '', message)
    # message = message.split()
    # flug = False
    # for i in keywords:
    #     for j in message:
    #         if i == j[:len(i)]:
    #             flug = True
    #             break
    # return flug
@bot.message_handler(func=findkeyword)
def start(message):
    bot.reply_to(message, '–ï—Å—Ç—å —Å–ª–æ–≤–æ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∫–∞—Ä—Ç–∞–º–∏')

def findThiev(message):
    w1, w2 = 'Edinaya Rossiya', '$¬•‚Ç¨'
    return w1 in message.text and any(w in message.text for w in w2)
    # keywords = ['Edinaya Rossiya']
    # keywords2 = ['$', '¬•', '‚Ç¨']
    # one = any(word in message.text for word in keywords)
    # two = any(word in message.text for word in keywords2)
    # return one and two
@bot.message_handler(func=findThiev)
def start(message):
    bot.reply_to(message, '–ï—Å—Ç—å —Å–ª–æ–≤–æ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º')


@bot.message_handler(func=lambda message: True)
def start(message):
    bot.send_message(message.chat.id, f'"{message.text}"  –ò —á—Ç–æ? –í—Å–µ–º –Ω–∞–ø–ª–µ–≤–∞—Ç—å... –ó–∞—á–µ–º —Ç—ã —ç—Ç–æ –Ω–∞–ø–∏—Å–∞–ª, \U0001F921 ?')

bot.polling()
# –º–µ—Ç–æ–¥ polling –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç,
# –∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ handler
# –µ—Å–ª–∏ —Ö–æ—Ç—å 1 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–¥–∞—Å—Ç True, –¥—Ä—É–≥–∏–µ –æ–±—Ä-–∫–∏ –Ω–µ –∑–∞–ø—É—Å—Ç—è—Ç—Å—è
